syntax = "proto3";
//
// Copyright (C) 2019 Topica Edtech Group.
//

package vn.edu.topicanative.saas.api.model.notification;

import "MetaDataModel.proto";

message Messages {
  repeated Message messages = 1;
}

message Message {
  string messageId = 1;
  string senderId = 2;
  repeated Delivery deliveries = 3;
  MessageEnvelope messageEnvelope = 4;
  int64 createdUtcTimestamp = 5;
  int64 updatedUtcTimestamp = 6;
}

message Delivery {
  DeliveryType deliveryType = 1;
  int32 retries = 2;
  LogicType logicType = 3;
}

enum DeliveryType {
  UNKNOWN_DELIVERY_TYPE = 0;
  SMS = 1;
  FCM = 2;
  APNS = 3;
  EMAIL = 4;
}

enum LogicType {
  UNKNOWN_LOGIC_TYPE = 0;
  OR = 1;
  AND = 2;
  NEXT = 3;
}

message MessageEnvelope {
  MessageType messageType = 1;
  EmailMessage emailMessage = 2;
  SMSMessage smsMessage = 3;
  APNSMessage apnsMessage = 4;
  FCMMessage fcmMessage = 5;
}

enum MessageType {
  UNKNOWN_MESSAGE_TYPE = 0;
  EMAIL_RESET_PASSWORD = 1;
  SMS_OTP = 2;
}

message EmailMessage {
  repeated EmailRecipient recipients = 1;
  string subject = 2;
  EmailMimeType mimeType = 3;
  string content = 4;
  string fromEmail = 5;
  string fromName = 6;
  repeated EmailHeader headers = 7;
  repeated EmailAttachment attachments = 8;
  TemplateSpec templateSpec = 9;
  EmailProvider emailProvider = 10;
}

message EmailRecipient {
  string email = 1;
  string name = 2;
  EmailRecipientType type = 3;
}

enum EmailRecipientType {
  UNKNOWN_EMAIL_RECIPIENT_TYPE = 0;
  TO = 1;
  CC = 2;
  BCC = 3;
}

enum EmailMimeType {
  UNKNOWN_EMAIL_MIME_TYPE = 0;
  TEXT = 1;
  HTML = 2;
}

message EmailHeader {
  string key = 1;
  string value = 2;
}

message EmailAttachment {
  string mimeType = 1;
  string name = 2;
  bytes content = 3;
}

message MergeVariable {
  string name = 1;
  string value = 2;
}

enum EmailProvider {
  UNKNOWN_EMAIL_PROVIDER = 0;
  SMTP = 1;
  SES = 2;
}

message SMSMessage {
  string text = 1;
  TemplateSpec templateSpec = 2;
  SMSProvider smsProvider = 3;
  repeated string recipients = 4;
}

enum SMSProvider {
  UNKNOWN_SMS_PROVIDER = 0;
  TOPICA_SMS_SERVICE_PROVIDER = 1;
  VMG_PROVIDER = 2;
}

message APNSMessage {
  string title = 1;
  string subTitle = 2;
  TemplateSpec templateSpec = 3;
  APNSProvider apnsProvider = 4;
  repeated string recipients = 5;
}

enum APNSProvider {
  UNKNOWN_APNS_TYPE = 0;
  APNS_PROVIDER = 1;
}

message FCMMessage {
  string title = 1;
  string subTitle = 2;
  TemplateSpec templateSpec = 3;
  FCMProvider fcmProvider = 4;
  repeated string recipients = 5;
}

enum FCMProvider {
  UNKNOWN_FCM_TYPE = 0;
  FCM_PROVIDER = 1;
}

message Templates {
  repeated Template templates = 1;
}

message Template {
  string id = 1;
  string key = 2;
  string locale = 3;
  string version = 4;
  string name = 5;
  string ownerId = 6;
  TemplateState state = 7;
  string subject = 8;
  string content = 9;
  repeated string variableNames = 10;
  TemplateProviderType provider = 11;
  bool supportStudentModel = 12;
  bool supportTeacherModel = 13;
  bool supportAdvisorModel = 14;
  string lastUpdatedBy = 15;
  int64 updatedUtcTimestamp = 16;
  int64 createdUtcTimestamp = 17;
}

enum TemplateState {
  UNKNOWN_TEMPLATE_STATE = 0;
  INACTIVE = 1;
  DRAFT = 2;
  TESTING = 3;
  PUBLISHED = 4;
}

enum TemplateProviderType {
  UNKNOWN_TEMPLATE_PROVIDER_TYPE = 0;
  LOCAL_TEMPLATE_PROVIDER = 1;
  SES_TEMPLATE_PROVIDER = 2;
}

message TemplateSpec {
  string templateId = 1;
  repeated MergeVariable variables = 2;
}

message TemplateId {
  string id = 1;
  string key = 2;
  string locale = 3;
  string version = 4;
}